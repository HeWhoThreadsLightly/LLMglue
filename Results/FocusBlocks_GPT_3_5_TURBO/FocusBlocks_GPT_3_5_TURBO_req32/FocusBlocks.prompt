"FocusBlocks" is a productivity tool designed to help users manage their time effectively using the Pomodoro technique with a twist. The application not only acts as a simple timer but also blocks distracting websites and applications during focus sessions. It includes features for task management, allowing users to allocate specific tasks to each focus session and track their progress over time.
REQ1 Core features: Pomodoro timer: The application must allow users to start, pause, and stop a focus session based on the Pomodoro technique.
REQ2 Core features: Pomodoro timer: Users should be able to customize the duration of focus sessions and break intervals, with default settings being 25 minutes for focus and 5 minutes for short breaks. An option for longer breaks (15 minutes) after every four focus sessions should also be included.
REQ3 Core features: Pomodoro timer: Visual and audio notifications to alert users when a session starts or ends, and when it's time for a break.
REQ4 Core features: Distracting website and application blocker: During focus sessions, the application must block access to a user-customizable list of websites and applications that are deemed distracting (e.g., social media, streaming services).
REQ5 Core features: Distracting website and application blocker: The app should provide an easy-to-use interface for adding or removing websites and applications from the block list.
REQ6 Core features: Distracting website and application blocker: The blocking feature must be robust enough to prevent easy bypasses, such as using a different browser or renaming the application's executable file.
REQ7 Core features: Task management: Users must be able to create a list of tasks they plan to work on during each focus session.
REQ8 Core features: Task management: Each task should have a title, a brief description, an estimated duration (number of Pomodoros), and a completion status.
REQ9 Core features: Task management: The application should allow users to edit task details, mark tasks as complete, and review completed tasks at the end of each day or session.
REQ10 Core features: Integration with focus session: Before starting a focus session, users should be prompted to select a task or tasks they intend to work on during that session.
REQ11 Core features: Integration with focus session: The application should track the time spent on each task and automatically suggest breaks based on the Pomodoro schedule.
REQ12 Core features: Integration with focus session: Optionally, users can skip or end the focus session early, in which case the app should ask if the task was completed or needs to be rescheduled.
REQ13 Additional feature requirements: Customization: Allow users to set custom durations for focus periods and breaks.
REQ14 Additional feature requirements: Customization: Users can create a list of websites and applications to block during focus sessions.
REQ15 Additional feature requirements: Customization: Option to customize notification sounds and themes of the application.
REQ16 Additional feature requirements: Reporting and analytics: Daily, weekly, and monthly reports showing the user's productivity, such as the number of focus sessions completed, tasks completed, and time spent in focus.
REQ17 Additional feature requirements: Reporting and analytics: Visual analytics in the form of graphs or charts to make it easy to assess productivity trends.
REQ18 Additional feature requirements: Technical requirements: Use of local storage or an embedded database to store user data and preferences.
REQ19 Additional feature requirements: Additional features: Integration with popular calendar applications for task scheduling.
REQ20 Additional feature requirements: Additional features: Social feature to allow users to set and share productivity challenges with friends or colleagues.
REQ21 Accessibility requirements: Keyboard navigation: Full functionality should be accessible via keyboard shortcuts to ensure that users who cannot use a mouse can navigate efficiently through the application.
REQ22 Accessibility requirements: Keyboard navigation: Implement tab navigation through all interactive elements in a logical order.
REQ23 Accessibility requirements: Keyboard navigation: Provide visual indicators for the currently focused element.
REQ24 Accessibility requirements: Screen reader support: make use of alt text to describe images, icons, and other non-textual elements.
REQ25 Accessibility requirements: Screen reader support: Use labels and roles for complex elements (like drag-and-drop interfaces or custom controls) to ensure their purpose and state are conveyed to screen reader users.
REQ26 Accessibility requirements: High contrast mode: Support for high contrast themes that make text, icons, and other elements more distinguishable for users with low vision.
REQ27 Accessibility requirements: High contrast mode: Ensure that all text is readable and all interactive elements are visible against background colors.
REQ28 Accessibility requirements: Text size and font adjustments: Allow users to adjust text size without breaking the layout or losing functionality.
REQ29 Accessibility requirements: Text size and font adjustments: Support the use of user-defined system fonts, including those designed for dyslexia.
REQ30 Accessibility requirements: Color blind mode: Implement color schemes that are accessible to users with various types of color blindness (e.g., deuteranopia, protanopia, tritanopia).
REQ31 Accessibility requirements: Color blind mode: Ensure that information conveyed with color is also distinguishable through patterns or shapes.
REQ32 Accessibility requirements: Magnification and zoom: Ensure the application's interface and content can be magnified or zoomed in up to 200% without loss of content or functionality, to accommodate users with low vision.